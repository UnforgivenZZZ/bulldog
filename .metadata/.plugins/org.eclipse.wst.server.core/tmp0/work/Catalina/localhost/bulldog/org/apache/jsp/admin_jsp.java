/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M21
 * Generated at: 2017-07-17 05:31:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("    <title></title>\n");
      out.write("\n");
      out.write("    <!-- Ignite UI Required Combined CSS Files -->\n");
      out.write("    <link href=\"http://cdn-na.infragistics.com/igniteui/2017.1/latest/css/themes/infragistics/infragistics.theme.css\" rel=\"stylesheet\" />\n");
      out.write("    <link href=\"http://cdn-na.infragistics.com/igniteui/2017.1/latest/css/structure/infragistics.css\" rel=\"stylesheet\" />\n");
      out.write("\n");
      out.write("    <script src=\"http://ajax.aspnetcdn.com/ajax/modernizr/modernizr-2.8.3.js\"></script>\n");
      out.write("    <script src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\n");
      out.write("    <script src=\"http://code.jquery.com/ui/1.11.1/jquery-ui.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- Ignite UI Required Combined JavaScript Files -->\n");
      out.write("    <script src=\"http://cdn-na.infragistics.com/igniteui/2017.1/latest/js/infragistics.core.js\"></script>\n");
      out.write("    <script src=\"http://cdn-na.infragistics.com/igniteui/2017.1/latest/js/infragistics.lob.js\"></script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("    <div id=\"igUpload1\"></div>\n");
      out.write("    <div id=\"error-message\" style=\"color: #FF0000; font-weight: bold;\"></div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        $(function () {\n");
      out.write("            var buttonLabel = $.ig.Upload.locale.labelUploadButton;\n");
      out.write("            if (Modernizr.input.multiple) {\n");
      out.write("                buttonLabel = \"Drag and Drop Files Here <br/> or Click to Select From a Dialog\";\n");
      out.write("            }\n");
      out.write("            $(\"#igUpload1\").igUpload({\n");
      out.write("                mode: 'multiple',\n");
      out.write("                multipleFiles: true,\n");
      out.write("                maxUploadedFiles: 5,\n");
      out.write("                maxSimultaneousFilesUploads: 2,\n");
      out.write("                progressUrl: \"https://www.igniteui.com/IGUploadStatusHandler.ashx\",\n");
      out.write("                controlId: \"serverID1\",\n");
      out.write("                labelUploadButton: buttonLabel,\n");
      out.write("                onError: function (e, args) {\n");
      out.write("                    showAlert(args);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            if (Modernizr.input.multiple) {\n");
      out.write("                $(\".ui-igstartupbrowsebutton\").attr(\"style\", \"width: 320px; height: 80px;\");\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function showAlert(args) {\n");
      out.write("            $(\"#error-message\").html(args.errorMessage).stop(true, true).fadeIn(500).delay(3000).fadeOut(500);\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
